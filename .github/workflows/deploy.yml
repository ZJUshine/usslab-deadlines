name: Deploy

on:
  schedule:
    - cron: '0 0 */7 * *'
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@main
      with: 
        node-version: '15.x'
  
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install PyYAML jsonschema

    - name: Sync conference folder
      run: |
        git clone https://github.com/ccfddl/ccf-deadlines.git temp_directory
        rm -rf conference
        mv temp_directory/conference conference
        rm -rf temp_directory

    - name: Commit and push conference folder changes
      run: |
        git config --local user.email "3190103641@zju.edu.cn"
        git config --local user.name "ZJUshine"
        git add conference/
        git commit -m "Sync conference folder from ccfddl/ccf-deadlines"
        git push

    - name: Validate yml files
      run: |
        python ./scripts/validate
    
    - name: Select USSLAB conference
      run: |
        python ./scripts/select
      
    - name: Modify conference yml files
      run: |
        python ./scripts/modify

    - name: Assemble yml files
      run: |
        mkdir -p public/conference && cd public/conference
        awk 1 `find ../../selected_conference -name '*.yml' -not -path '**/types.yml'` > allconf.yml
        cp ../../conference/types.yml .
        cd ../..

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependency and build
      run: |
        yarn config set strict-ssl false
        yarn install
        yarn build
    
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: dist
        token: ${{ secrets.ACCESS_TOKEN }}
        branch: main
        repository-name: ZJUshine/usslab-conference-ddls
